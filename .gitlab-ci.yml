variables:
  Solution: Rtti-plugin-x64.sln

stages:
  - build
  - prepare
  - upload
  - release

build:
  stage: build
  tags:
    - windows
    - colin-pc
  script:
    - |
      write-host "While it is true that I default to PowerShell, running cmd is easy..."
      set-content $env:public\inline.cmd -Value @'
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat"

      MsBuild.exe "%Solution%" -verbosity:quiet -nologo -t:Build -p:Configuration=Release -p:Platform=x86
      MsBuild.exe "%Solution%" -verbosity:quiet -nologo -t:Build -p:Configuration=Release -p:Platform=x64
      '@

      CMD.EXE /C $env:public\inline.cmd
      exit $LASTEXITCODE

  artifacts:
    name: "$env:CI_JOB_STAGE-$env:CI_COMMIT_REF_NAME"
    paths:
      - bin/*
    expire_in: never

generate_tag:
  stage: prepare
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Run this job when the default branch changes
  script:
    - echo "TAG=0.0.2" > tag.env
  artifacts:
    reports:
      dotenv: tag.env

upload:
  stage: upload
  image: curlimages/curl:latest
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/Rtti.dp32 "${PACKAGE_REGISTRY_URL}/Rtti.dp32"

auto-release-master:
  image: registry.gitlab.com/gitlab-org/release-cli
  needs:
    - job: generate_tag
      artifacts: true
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Run this job when when commits are pushed to the default branch
  script:
    - echo "Release $TAG"
  release:
    name: "Release $TAG"
    description: "Created using the release-cli $EXTRA_DESCRIPTION"
    tag_name: v$TAG
    ref: $CI_COMMIT_SHA
